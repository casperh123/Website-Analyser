@using WebsiteAnalyzer.Core.Domain.Website
@inject NavigationManager NavigationManager

<RadzenRow>
    <RadzenLink Path="/websites" >
        <RadzenButton Icon="keyboard_arrow_left" Size="ButtonSize.Medium" Style="margin-bottom: 40px;"/>
    </RadzenLink>
    <RadzenDropDown Data="Websites" Value="Website" TValue="Website" TextProperty="@nameof(Website.Name)" ValueChanged="@((website) => NavigateToWebsite(website))"/>
</RadzenRow>

@if (Website is not null)
{
    <RadzenStack Style="margin-bottom: 40px;" Gap="0">
        <RadzenText TextStyle="TextStyle.DisplayH1" Style="margin-bottom: 0;">@Website?.Name</RadzenText>
        <RadzenLink Path="@Website.Url">@Website.Url</RadzenLink>
    </RadzenStack>  
    
    <RadzenRow>
        <RadzenStack>
            <WebsiteStatsMenu Website="Website"/>
        </RadzenStack>

        <RadzenColumn>
            <RadzenStack>
                @ChildContent
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}
else
{
    <RadzenText>Could not find website</RadzenText>
}

@code {
    [Parameter, EditorRequired]
    public required Website? Website { get; set; }

    [Parameter, EditorRequired]
    public required IEnumerable<Website> Websites { get; set; }
    
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public void NavigateToWebsite(Website? website)
    {
        string newUrl = NavigationManager.Uri.Replace($"/website/{Website?.Id}", $"/website/{website?.Id}");
        NavigationManager.NavigateTo(newUrl, forceLoad: true);
    }
}