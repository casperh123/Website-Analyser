@typeparam TItem

<RadzenStack Gap="20">
    @foreach (TItem item in FilteredItems)
    {
        @ItemTemplate(item)
    }
</RadzenStack>

<RadzenPager PageSize="PageSize" Count="Count" PageNumbersCount="5" PageChanged="OnPageChanged"/>

@code {
    [Parameter, EditorRequired]
    public required RenderFragment<TItem> ItemTemplate { get; set; }
    
    [Parameter]
    public required ICollection<TItem> Items { get; set; }
    
    [Parameter]
    public int PageSize { get; set; }

    private ICollection<TItem> FilteredItems { get; set; } = [];
    private int Count => Items.Count;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        FilteredItems = Items.Take(PageSize).ToList();
    }

    private void OnPageChanged(PagerEventArgs args)
    {
        FilteredItems = Items.Skip(args.Skip).Take(args.Top).ToList();
    }
}