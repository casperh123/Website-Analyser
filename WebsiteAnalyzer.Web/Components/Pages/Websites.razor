@page "/Websites"

@using WebsiteAnalyzer.Core.Entities.Website
@using WebsiteAnalyzer.Core.Interfaces.Services
@using WebsiteAnalyzer.Infrastructure
@using WebsiteAnalyzer.Web.Services
@using WebsiteAnalyzer.Web.Components.Cards
@using WebsiteAnalyzer.Web.Components.Website.Toggles
@using WebsiteAnalyzer.Web.Models

@inject IUserService UserService
@inject IWebsiteService WebsiteService

<AuthorizeView>
    <Authorized>
        <RadzenText TextStyle="TextStyle.DisplayH1">Websites</RadzenText>
        
        <ToggleAddNewWebsite WebsiteAdded="AddWebsite" StartOpen="_startOpen"/>

        <RadzenStack Gap="20" Style="margin: 20px 0;">
            @if (_websites.Count == 0)
            {
                <RadzenText>No websites are being monitored.</RadzenText>
            }
            else
            {
                @foreach (Core.Entities.Website.Website website in _websites)
                {
                    <WebsiteCard Website="@website" WebsiteDeleted="DeleteWebsite"/>
                }   
            }
        </RadzenStack>
    </Authorized>
    <NotAuthorized>
        <RadzenText>You need to be logged in to view Websites.</RadzenText>
    </NotAuthorized>
</AuthorizeView>

@code {
    private ApplicationUser? _user;
    private ICollection<Core.Entities.Website.Website> _websites = [];
    private bool _startOpen;

    protected override async Task OnInitializedAsync()
    {
        _user = await UserService.GetCurrentUserAsync();
        _websites = await WebsiteService.GetWebsitesByUserId(_user?.Id);

        if (_websites.Count == 0)
        {
            _startOpen = true;
        }
    }

    private async Task AddWebsite(AddWebsiteModel newWebsiteModel)
    {
        Core.Entities.Website.Website addedWebsite = await WebsiteService.AddWebsite(newWebsiteModel.Url, _user.Id, newWebsiteModel.Name); 
        
        _websites.Add(addedWebsite);
        
        await InvokeAsync(StateHasChanged);
    }

    private async Task DeleteWebsite(Core.Entities.Website.Website website)
    {
        await WebsiteService.DeleteWebsite(website.Url, website.UserId);
    }
}