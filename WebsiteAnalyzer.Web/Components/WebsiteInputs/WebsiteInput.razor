@using WebsiteAnalyzer.Web.Components.ErrorHandling
@using WebsiteAnalyzer.Web.Components.Crawl.CrawlMetrics

<RadzenCard Style="max-width: 600px" class="rz-mt-12">
    <RadzenStack>
        <RadzenLabel Component="url-input">Select Url</RadzenLabel>
        <RadzenTextBox Value="@Url" Change="ChangeUrl" AutoCompleteType="AutoCompleteType.Url" />
        <RadzenButton Click="@OnChanged" Disabled="@_isProcessing">Start</RadzenButton>

        @if (_isProcessing)
        {
            <RadzenButton Click="OnCancel" ButtonStyle="ButtonStyle.Danger">Cancel</RadzenButton>
        }
    </RadzenStack>
    
    <ErrorMessage Message="@_errorMessage"/>
    <CrawlMetrics LinksChecked="LinksChecked" LinksEnqueued="LinksEnqueued"/>
</RadzenCard>

@code {
    [Parameter] 
    public EventCallback<Uri> WebsiteActionStarted { get; set; }

    [Parameter] 
    public EventCallback OnCancel { get; set; }

    [Parameter] 
    public int LinksChecked { get; set; }

    [Parameter] 
    public int LinksEnqueued { get; set; }

    [Parameter] 
    public string Url { get; set; } = "https://";

    private bool _isProcessing;
    private string _errorMessage = "";

    private void ChangeUrl(string url)
    {
        Url = url;
    }

    private async Task OnChanged()
    {
        _errorMessage = "";
        _isProcessing = true;
        
        try
        {
            Url.TrimEnd('/');

            Uri uri = new Uri(Url, UriKind.Absolute);
            await WebsiteActionStarted.InvokeAsync(uri);
        }
        catch (UriFormatException)
        {
            _errorMessage = "The URL entered is not in a valid format.";
        }
        finally
        {
            _isProcessing = false;
        }
    }
}