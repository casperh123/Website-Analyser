services:
  app:
    image: clyppertechnology/websiteanalyzer:0.0.55
    ports:
      - "80:8080"
      - "443:8081"
    environment:
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_HTTPS_PORT=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/website-analyzer.pfx
      # Use the connection string from environment variable
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
    volumes:
      - /etc/ssl/private/aspnetcerts:/https
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    environment:
      # Use environment variables for database configuration
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Use environment variables in healthcheck
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: